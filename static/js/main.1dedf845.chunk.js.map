{"version":3,"sources":["components/Icon.js","audios/bgSong.mp3","audios/click.mp3","audios/winner.mp3","audios/draw.mp3","App.js","index.js"],"names":["Icon","name","FiberManualRecordOutlined","className","Close","Create","itemArray","Array","fill","App","useState","playerModal","setPlayerModal","player1","set_player1","player2","set_player2","p1Point","set_p1Point","p2Point","set_p2Point","snackbar","set_snackbar","messsage","severity","snackData","set_snackData","isCross","setIsCross","win","set_win","crossIndexes","set_crossIndexes","crossAngle","set_crossAngle","topMsg","set_topMsg","useSound","bgSong","volume","bgPlay","click","clickPlay","winner","winnerPlay","draw","drawPlay","useEffect","handleSnackClose","changeItem","itemNumber","showWinner","every","val","Container","Modal","open","disableEnforceFocus","Fade","in","value","onChange","e","target","type","Button","variant","onClick","console","log","map","item","index","Card","CardContent","includes","color","Snackbar","autoHideDuration","onClose","Alert","dir","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAceA,EAXF,SAAC,GACZ,OADyB,EAAXC,MAEZ,IAAK,SACH,OAAO,cAACC,EAAA,EAAD,CAA2BC,UAAU,UAC9C,IAAK,QACH,OAAO,cAACC,EAAA,EAAD,CAAOD,UAAU,UAC1B,QACE,OAAO,cAACE,EAAA,EAAD,CAAQF,UAAU,YCVhB,MAA0B,mCCA1B,MAA0B,kCCA1B,MAA0B,mCCA1B,MAA0B,iCCoBnCG,EAAY,IAAIC,MAAM,GAAGC,KAAK,SAkRrBC,EAhRH,WACV,MAAsCC,oBAAS,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA+BF,mBAAS,IAAxC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA+BJ,mBAAS,IAAxC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA+BN,mBAAS,GAAxC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA+BR,mBAAS,GAAxC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAiCV,oBAAS,GAA1C,mBAAOW,EAAP,KAAiBC,EAAjB,KACA,EAAmCZ,mBAAS,CAC1Ca,SAAU,GACVC,SAAU,YAFZ,mBAAOC,EAAP,KAAkBC,EAAlB,KAIA,EAA8BhB,oBAAS,GAAvC,mBAAOiB,EAAP,KAAgBC,EAAhB,KACA,EAAuBlB,oBAAS,GAAhC,mBAAOmB,EAAP,KAAYC,EAAZ,KACA,GAAyCpB,mBAAS,IAAlD,qBAAOqB,GAAP,MAAqBC,GAArB,MACA,GAAqCtB,mBAAS,IAA9C,qBAAOuB,GAAP,MAAmBC,GAAnB,MACA,GAA6BxB,mBAAS,IAAtC,qBAAOyB,GAAP,MAAeC,GAAf,MACA,GAAiBC,YAASC,EAAQ,CAChCC,OAAQ,KADHC,GAAP,qBAGA,GAAoBH,YAASI,EAAO,CAClCF,OAAQ,IADHG,GAAP,qBAGA,GAAqBL,YAASM,EAAQ,CACpCJ,OAAQ,IADHK,GAAP,qBAGA,GAAmBP,YAASQ,EAAM,CAChCN,OAAQ,IADHO,GAAP,qBAGAC,qBAAU,WACRP,OACC,CAACA,KAEJ,IAYMQ,GAAmB,WACvB1B,GAAa,IA+ET2B,GAAa,SAACC,GAElB,OADAR,KACIb,GACFH,EAAc,CACZH,SAAU,sCACVC,SAAU,SAELF,GAAa,IAEQ,UAA1BhB,EAAU4C,IAIZxB,EAAc,CACZH,SAAU,iBACVC,SAAU,UAELF,GAAa,KAPpBhB,EAAU4C,GAAcvB,EAAU,QAAU,SAC5CC,GAAYD,QA7EZrB,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IACV,UAAjBA,EAAU,IAEV6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAEP,UAAjB1B,EAAU,IACVA,EAAU,KAAOA,EAAU,IAC3BA,EAAU,KAAOA,EAAU,IAE3B6C,GAAW7C,EAAU,IACrB0B,GAAiB,CAAC,EAAG,EAAG,KAExB1B,EAAU8C,OAAM,SAACC,GACf,MAAe,UAARA,OAGTjB,GAAW,aACXN,GAAQ,GACRgB,SAyBEK,GAAa,SAACE,GAClBT,KACAR,GAAW,GAAD,OAAY,WAARiB,EAAmBxC,EAAUE,EAAjC,SACVe,GAAQ,GACA,WAARuB,EAAmBnC,EAAYD,EAAU,GAAKG,EAAYD,EAAU,IAqBtE,OAnBA4B,qBAAU,WAER,OADUhB,GAAa,GAAKA,GAAa,IAEvC,KAAK,EACHG,GAAe,cACf,MACF,KAAK,EACHA,GAAe,aACf,MACF,KAAK,EACHA,GAAe,YACf,MACF,KAAK,EACHA,GAAe,iBAKlB,CAACH,KAEF,eAACuB,EAAA,EAAD,CAAWnD,UAAU,OAArB,UACE,6CAEA,cAACoD,EAAA,EAAD,CACE,kBAAgB,yBAChB,mBAAiB,+BACjBpD,UAAU,QACVqD,KAAM7C,EACN8C,qBAAmB,EALrB,SAOE,cAACC,EAAA,EAAD,CAAMC,GAAIhD,EAAV,SACE,sBAAKR,UAAU,aAAf,UACE,qDACA,uBACEA,UAAU,YACVyD,MAAO/C,EACPgD,SAAU,SAACC,GAAD,OAAOhD,EAAYgD,EAAEC,OAAOH,QACtCI,KAAK,SAEP,uBACA,uBACA,qDACA,uBACE7D,UAAU,YACVyD,MAAO7C,EACP8C,SAAU,SAACC,GAAD,OAAO9C,EAAY8C,EAAEC,OAAOH,QACtCI,KAAK,SAEP,cAACC,EAAA,EAAD,CACE9D,UAAU,SACV+D,QAAQ,YACRC,QA1KQ,WAClB,MAAgB,KAAZtD,GAA8B,KAAZE,EACbH,GAAe,IAEtBwD,QAAQC,IAAI,SACZ3C,EAAc,CACZH,SAAU,+BACVC,SAAU,SAELF,GAAa,KA8Jd,0BAWN,gCACGO,EACC,oBAAI1B,UAAU,UAAd,SAAyBgC,KAEzB,mCACGxB,EAAc,KACb,qBAAIR,UAAU,2BAAd,UACGwB,EAAUZ,EAAUF,EADvB,eAMN,qBAAKV,UAAU,OAAf,SACGG,EAAUgE,KAAI,SAACC,EAAMC,GAAP,OACb,cAACC,EAAA,EAAD,CAAMtE,UAAU,MAAMgE,QAAS,kBAAMlB,GAAWuB,IAAhD,SACE,eAACE,EAAA,EAAD,WACE,qBACEvE,UAAS,UACP4B,GAAa4C,SAASH,GAAS,QAAU,KADlC,YAELvC,MAEN,cAAC,EAAD,CAAMhC,KAAMsE,cAKpB,sBAAKpE,UAAU,aAAf,UACG0B,EACC,cAACoC,EAAA,EAAD,CACE9D,UAAU,iBACV+D,QAAQ,YACRU,MAAM,UACNT,QAnMO,WACjBvC,GAAW,GACXE,GAAQ,GACRxB,EAAUE,KAAK,QAAS,EAAG,GAC3BwB,GAAiB,IACjBE,GAAe,KA0LP,6BAQE,KACJ,cAAC2C,EAAA,EAAD,CACErB,KAAMnC,EACNyD,iBAAkB,IAClBC,QAAS/B,GAHX,SAKE,cAACgC,EAAA,EAAD,CAAOD,QAAS/B,GAAkBxB,SAAUC,EAAUD,SAAtD,SACGC,EAAUF,mBAKnB,sBAAKpB,UAAU,aAAf,UACE,0BAASA,UAAU,UAAnB,UACE,+BAAOc,IACNJ,KAEH,0BAASoE,IAAI,MAAM9E,UAAU,UAA7B,UACGY,EACD,+BAAOI,cC1RjB+D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1dedf845.chunk.js","sourcesContent":["import React from \"react\";\nimport { FiberManualRecordOutlined,Close,Create} from '@material-ui/icons'\n\nconst Icon = ({ name }) => {\n  switch (name) {\n    case \"circle\":\n      return <FiberManualRecordOutlined className=\"icons\" />;\n    case \"cross\":\n      return <Close className=\"icons\" />;\n    default:\n      return <Create className=\"icons\" />;\n  }\n};\n\nexport default Icon;\n","export default __webpack_public_path__ + \"static/media/bgSong.57be5542.mp3\";","export default __webpack_public_path__ + \"static/media/click.8515d2a4.mp3\";","export default __webpack_public_path__ + \"static/media/winner.9cfbe32b.mp3\";","export default __webpack_public_path__ + \"static/media/draw.7a117c09.mp3\";","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Snackbar,\r\n  CardContent,\r\n  Container,\r\n  Button,\r\n  Modal,\r\n  Fade,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport useSound from \"use-sound\";\r\nimport \"./App.scss\";\r\n// components\r\nimport Icon from \"./components/Icon\";\r\nimport bgSong from \"./audios/bgSong.mp3\";\r\nimport click from \"./audios/click.mp3\";\r\nimport winner from \"./audios/winner.mp3\";\r\nimport draw from \"./audios/draw.mp3\";\r\n\r\nconst itemArray = new Array(9).fill(\"empty\");\r\n\r\nconst App = () => {\r\n  const [playerModal, setPlayerModal] = useState(true);\r\n  const [player1, set_player1] = useState(\"\");\r\n  const [player2, set_player2] = useState(\"\");\r\n  const [p1Point, set_p1Point] = useState(0);\r\n  const [p2Point, set_p2Point] = useState(0);\r\n  const [snackbar, set_snackbar] = useState(false);\r\n  const [snackData, set_snackData] = useState({\r\n    messsage: \"\",\r\n    severity: \"success\",\r\n  });\r\n  const [isCross, setIsCross] = useState(false);\r\n  const [win, set_win] = useState(false);\r\n  const [crossIndexes, set_crossIndexes] = useState([]);\r\n  const [crossAngle, set_crossAngle] = useState(\"\");\r\n  const [topMsg, set_topMsg] = useState(\"\");\r\n  const [bgPlay] = useSound(bgSong, {\r\n    volume: 0.1,\r\n  });\r\n  const [clickPlay] = useSound(click, {\r\n    volume: 1,\r\n  });\r\n  const [winnerPlay] = useSound(winner, {\r\n    volume: 1,\r\n  });\r\n  const [drawPlay] = useSound(draw, {\r\n    volume: 1,\r\n  });\r\n  useEffect(() => {\r\n    bgPlay();\r\n  }, [bgPlay]);\r\n\r\n  const handleStart = () => {\r\n    if (player1 !== \"\" && player2 !== \"\") {\r\n      return setPlayerModal(false);\r\n    } else {\r\n      console.log(\"start\");\r\n      set_snackData({\r\n        messsage: \"Please fill all the fields. \",\r\n        severity: \"info\",\r\n      });\r\n      return set_snackbar(true);\r\n    }\r\n  };\r\n  const handleSnackClose = () => {\r\n    set_snackbar(false);\r\n  };\r\n  const reloadGame = () => {\r\n    setIsCross(false);\r\n    set_win(false);\r\n    itemArray.fill(\"empty\", 0, 9);\r\n    set_crossIndexes([]);\r\n    set_crossAngle(\"\");\r\n  };\r\n\r\n  const checkIsWinner = () => {\r\n    //  checking  winner of the game\r\n    if (\r\n      itemArray[0] === itemArray[1] &&\r\n      itemArray[0] === itemArray[2] &&\r\n      itemArray[0] !== \"empty\"\r\n    ) {\r\n      showWinner(itemArray[0]);\r\n      set_crossIndexes([0, 1, 2]);\r\n    } else if (\r\n      itemArray[3] !== \"empty\" &&\r\n      itemArray[3] === itemArray[4] &&\r\n      itemArray[4] === itemArray[5]\r\n    ) {\r\n      showWinner(itemArray[3]);\r\n      set_crossIndexes([3, 4, 5]);\r\n    } else if (\r\n      itemArray[6] !== \"empty\" &&\r\n      itemArray[6] === itemArray[7] &&\r\n      itemArray[7] === itemArray[8]\r\n    ) {\r\n      showWinner(itemArray[6]);\r\n      set_crossIndexes([6, 7, 8]);\r\n    } else if (\r\n      itemArray[0] !== \"empty\" &&\r\n      itemArray[0] === itemArray[3] &&\r\n      itemArray[3] === itemArray[6]\r\n    ) {\r\n      showWinner(itemArray[0]);\r\n      set_crossIndexes([0, 3, 6]);\r\n    } else if (\r\n      itemArray[1] !== \"empty\" &&\r\n      itemArray[1] === itemArray[4] &&\r\n      itemArray[4] === itemArray[7]\r\n    ) {\r\n      showWinner(itemArray[1]);\r\n      set_crossIndexes([1, 4, 7]);\r\n    } else if (\r\n      itemArray[2] !== \"empty\" &&\r\n      itemArray[2] === itemArray[5] &&\r\n      itemArray[5] === itemArray[8]\r\n    ) {\r\n      showWinner(itemArray[2]);\r\n      set_crossIndexes([2, 5, 8]);\r\n    } else if (\r\n      itemArray[0] !== \"empty\" &&\r\n      itemArray[0] === itemArray[4] &&\r\n      itemArray[4] === itemArray[8]\r\n    ) {\r\n      showWinner(itemArray[0]);\r\n      set_crossIndexes([0, 4, 8]);\r\n    } else if (\r\n      itemArray[2] !== \"empty\" &&\r\n      itemArray[2] === itemArray[4] &&\r\n      itemArray[4] === itemArray[6]\r\n    ) {\r\n      showWinner(itemArray[2]);\r\n      set_crossIndexes([2, 4, 6]);\r\n    } else if (\r\n      itemArray.every((val) => {\r\n        return val !== \"empty\";\r\n      })\r\n    ) {\r\n      set_topMsg(`Match Tie`);\r\n      set_win(true);\r\n      drawPlay();\r\n    }\r\n  };\r\n\r\n  const changeItem = (itemNumber) => {\r\n    clickPlay();\r\n    if (win) {\r\n      set_snackData({\r\n        messsage: \"Match Finished . Please reloade ...\",\r\n        severity: \"info\",\r\n      });\r\n      return set_snackbar(true);\r\n    }\r\n    if (itemArray[itemNumber] === \"empty\") {\r\n      itemArray[itemNumber] = isCross ? \"cross\" : \"circle\";\r\n      setIsCross(!isCross);\r\n    } else {\r\n      set_snackData({\r\n        messsage: \"Already Filled\",\r\n        severity: \"error\",\r\n      });\r\n      return set_snackbar(true);\r\n    }\r\n    checkIsWinner();\r\n  };\r\n  const showWinner = (val) => {\r\n    winnerPlay();\r\n    set_topMsg(`${val === \"circle\" ? player1 : player2} won`);\r\n    set_win(true);\r\n    val === \"circle\" ? set_p1Point(p1Point + 1) : set_p2Point(p2Point + 1);\r\n  };\r\n  useEffect(() => {\r\n    let dif = crossIndexes[1] - crossIndexes[0];\r\n    switch (dif) {\r\n      case 1:\r\n        set_crossAngle(\"horizontal\");\r\n        break;\r\n      case 2:\r\n        set_crossAngle(\"down_left\");\r\n        break;\r\n      case 3:\r\n        set_crossAngle(\"vertical\");\r\n        break;\r\n      case 4:\r\n        set_crossAngle(\"down_right\");\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  }, [crossIndexes]);\r\n  return (\r\n    <Container className=\"main\">\r\n      <h1>Tic-Tac-Toe</h1>\r\n      {/* MODAL: Player name input modal */}\r\n      <Modal\r\n        aria-labelledby=\"transition-modal-title\"\r\n        aria-describedby=\"transition-modal-description\"\r\n        className=\"modal\"\r\n        open={playerModal}\r\n        disableEnforceFocus\r\n      >\r\n        <Fade in={playerModal}>\r\n          <div className=\"modal_body\">\r\n            <lable>Player 1&nbsp;&nbsp;</lable>\r\n            <input\r\n              className=\"input_box\"\r\n              value={player1}\r\n              onChange={(e) => set_player1(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <br />\r\n            <br />\r\n            <lable>Player 1&nbsp;&nbsp;</lable>\r\n            <input\r\n              className=\"input_box\"\r\n              value={player2}\r\n              onChange={(e) => set_player2(e.target.value)}\r\n              type=\"text\"\r\n            />\r\n            <Button\r\n              className=\"button\"\r\n              variant=\"contained\"\r\n              onClick={handleStart}\r\n            >\r\n              Start\r\n            </Button>\r\n          </div>\r\n        </Fade>\r\n      </Modal>\r\n\r\n      <div>\r\n        {win ? (\r\n          <h4 className=\"win_msg\">{topMsg}</h4>\r\n        ) : (\r\n          <>\r\n            {playerModal ? null : (\r\n              <h4 className=\"text-center text-warning\">\r\n                {isCross ? player2 : player1}'s turn\r\n              </h4>\r\n            )}\r\n          </>\r\n        )}\r\n        <div className=\"grid\">\r\n          {itemArray.map((item, index) => (\r\n            <Card className=\"box\" onClick={() => changeItem(index)}>\r\n              <CardContent>\r\n                <div\r\n                  className={`${\r\n                    crossIndexes.includes(index) ? \"cross\" : null\r\n                  } ${crossAngle}`}\r\n                ></div>\r\n                <Icon name={item} />\r\n              </CardContent>\r\n            </Card>\r\n          ))}\r\n        </div>\r\n        <div className=\"bottom_div\">\r\n          {win ? (\r\n            <Button\r\n              className=\"reaload_button\"\r\n              variant=\"contained\"\r\n              color=\"warning\"\r\n              onClick={reloadGame}\r\n            >\r\n              Reload the game\r\n            </Button>\r\n          ) : null}\r\n          <Snackbar\r\n            open={snackbar}\r\n            autoHideDuration={6000}\r\n            onClose={handleSnackClose}\r\n          >\r\n            <Alert onClose={handleSnackClose} severity={snackData.severity}>\r\n              {snackData.messsage}\r\n            </Alert>\r\n          </Snackbar>\r\n        </div>\r\n      </div>\r\n      <div className=\"result_div\">\r\n        <section className=\"player1\">\r\n          <span>{p1Point}</span>\r\n          {player1}\r\n        </section>\r\n        <section dir=\"rtl\" className=\"player2\">\r\n          {player2}\r\n          <span>{p2Point}</span>\r\n        </section>\r\n      </div>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}